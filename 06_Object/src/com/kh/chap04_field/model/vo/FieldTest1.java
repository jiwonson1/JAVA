package com.kh.chap04_field.model.vo;

// 클래스 == "필드부" + 생성자부 + 메소드부
/*
 *  >> 변수구분
 *  - 전역변수 : 클래스영역에 바로 선언하는 변수 --> 클래스 내에서만 어디서든 다 사용 가능
 *  - 지역변수 : 클래스영역안의 어떤 특정한 구역({})에 선언하는 변수 --> 그 지역에서만 사용 가능
 *            메소드, 제어문(if, for) 등등
 *            
 *  >> 변수의 라이프사이클(생성시점, 소멸시점)
 *  1. 전역변수
 *  -  멤버변수 (인스턴스 변수, 필드)
 *     생성시점 : new 연산자를 통해서 해당 객체 생성시 메모리 영역에 할당
 *     소멸시점 : 객체 소멸시 같이 소멸
 *     
 *  -  클래스변수 (static변수) : static이라는 예약어가 붙은 변수
 *     생성시점 : 프로그램 실행과 동시에(해당 객체 생성이 안되도) 무조건 메모리 영역(static)에 할당
 *     소멸시점 : 프로그램이 종료될 때 소멸
 *  
 *  2. 지역변수
 *     생성시점 : 특정한 구역({}) 실행시 메모리 영역에 할당 (ex. 메소드 실행시)
 *     소멸시점 : 특정한 구역({}) 종료시 소멸 (ex. 메소드 종료시)
 *   
 */

// 변수 선언 위치에 따른 구분을 보기 위한 클래스 (전역, 지역, 매개)
public class FieldTest1 { // FieldTest1 클래스영역 시작
	
	// 멤버변수 == 인스턴스변수 == 필드
	private int global = 100;	
	
	
	public void test(int num) { // test 메소드영역 시작
		
		// 특정영역에서 선언한 변수 == 지역변수
		int local = 10;
		
		// 위의 매개변수 (메소드의 괄호 안에 작성하는 변수) == 지역변수
		
		// 멤버변수 출력
		System.out.println(global);
		
		// 지역변수 출력 --> 지역변수는 반드시 초기화 
		System.out.println(local);
		
		// 매개변수 출력 --> 메소드 호출시 반드시 값이 전달되어 오기 때문에 그 전달값이 담길것임!!
		System.out.println(num);
		
		
	} // test 메소드영역 끝
	

} // FieldTest1 클래스영역 끝
